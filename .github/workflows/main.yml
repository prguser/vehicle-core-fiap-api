name: Deploy to EKS

on:
  pull_request:
    branches: [ "main" ]
    types: [ "closed" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: 'adopt'

      - name: Build Project
        run: mvn clean install

      - name: Upload JAR file
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/*.jar

      - name: Download JAR file
        uses: actions/download-artifact@v3
        with:
          name: app-jar
          path: target

      - name: Build Docker image
        run: |
          docker build -t 202909432785.dkr.ecr.us-east-1.amazonaws.com/ms-vehicle-core-service .

      - name: Install and configure AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 202909432785.dkr.ecr.us-east-1.amazonaws.com

      - name: Tag and push Docker image
        run: |
          docker tag 202909432785.dkr.ecr.us-east-1.amazonaws.com/ms-vehicle-core-service:latest 202909432785.dkr.ecr.us-east-1.amazonaws.com/ms-vehicle-core-service:${GITHUB_SHA}
          docker push 202909432785.dkr.ecr.us-east-1.amazonaws.com/ms-vehicle-core-service:${GITHUB_SHA}


      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --region us-east-1 --name eks-cluster-aws-fiap
          
          # Cria o diretório k8s se não existir
          mkdir -p k8s
          
          # Define a URL do repositório ECR
          export ECR_REPOSITORY_URL="202909432785.dkr.ecr.us-east-1.amazonaws.com/ms-vehicle-core-service:${GITHUB_SHA}"
          
          # Substitui variáveis no arquivo k8s-deployment.yaml
          envsubst < kubernetes/producao/k8s-deployment.yaml > k8s/k8s-deployment.yaml
          
          # Substitui variáveis no arquivo k8s-service.yaml
          envsubst < kubernetes/producao/k8s-service.yaml > k8s/k8s-service.yaml
          
          # Substitui variáveis no arquivo k8s-ingress.yaml
          envsubst < kubernetes/producao/k8s-ingress.yaml > k8s/k8s-ingress.yaml
          
          # Cria o arquivo kustomization.yaml
          echo "resources:" > k8s/kustomization.yaml
          echo "- k8s-deployment.yaml" >> k8s/kustomization.yaml
          echo "- k8s-service.yaml" >> k8s/kustomization.yaml
          echo "- k8s-ingress.yaml" >> k8s/kustomization.yaml
          
          # Aplica os arquivos YAML no cluster
          kubectl kustomize k8s | kubectl apply -f - --force
     

